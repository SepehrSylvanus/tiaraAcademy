// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("NEXT_PUBLIC_DATABASE_URL")
}

enum Role {
  teacher
  admin
  student
  adminTeacher
}

enum WritingStatus {
  checked
  pending
}

model User {
  id       String  @id @default(cuid()) @map("_id")
  fName    String
  lName    String?
  email    String  @unique
  password String

  role Role @default(student)

  ClassUsers  ClassUsers[]
  Class       Class[]
  Writing     Writing[]
  WritingFile WritingFile[]
}

model Class {
  id         String       @id @default(cuid()) @map("_id")
  createdAt  DateTime     @default(now())
  title      String
  days       String[]
  price      String
  type       String
  classUsers ClassUsers[]
  creatorId  String
  creator    User         @relation(fields: [creatorId], references: [id])
}

model ClassUsers {
  id      String @id @default(cuid()) @map("_id")
  classId String
  class   Class  @relation(fields: [classId], references: [id])
  userId  String
  user    User   @relation(fields: [userId], references: [id])
}

model Writing {
  id            String        @id @default(cuid()) @map("_id")
  creatorId     String
  creator       User          @relation(fields: [creatorId], references: [id])
  name          String
  teacherId     String
  email         String
  subject       String
  subjectImgURL String?
  writing       String
  status        WritingStatus @default(pending)
}

model WritingFile {
  id          String        @id @default(cuid()) @map("_id")
  creatorId   String
  creator     User          @relation(fields: [creatorId], references: [id])
  teacherId   String
  writingLink String?
  status      WritingStatus @default(pending)
}

model Video {
  id        String  @id @default(cuid()) @map("_id")
  title     String
  bucketKey String?
  videoLink String?
}
